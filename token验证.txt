1.
用户首次登录时，后端服务器判断用户账号密码正确之后，根据用户id、用户名、定义好的秘钥、过期时间生成 token ，返回给前端；
前端拿到后端返回的 token ,普通项目在js cookie/localstorage中，；
前端每次页面跳转，判断cookie中有无 token ，没有则跳转到登录页，有则请求获取用户信息，改变登录状态；
每次请求接口，在 ajax请求头里携带 token;
后端接口判断请求头有无 token，没有或者 token 过期，返回401；
前端得到 401 状态码，重定向到登录页面。
2.token校验接口
    router.post("/jiaoyan",(req,res)=>{
        let token = req.headers.token;
        let miyao = "jwt";
        jwt.verify(token,miyao,(err)=>{
            if(err){
            res.json({code:401,msg:"登录过期"});
            }else{
            res.json({code:200,msg:"ok"})
            }
        })
    })
3.前端发起校验请求
    $(function(){
        $(".btn").click(function(){
            let token = localStorage.getItem("token")
            $.ajax({
                type: "post",
                url: "http://localhost:3000/users/jiaoyan",
                headers: {token:token},
                dataType: "json",
                success: function (data) {
                    alert(data.msg);
                }
            });
        })
    })
4.生成token的登录接口
    router.post('/login',(req,res)=>{
	let username=req.body.username;
    let password=req.body.password;
        mongodb.connect(db_str,(err,database)=>{    
            database.collection('info',(err,coll)=>{
                coll.find({username:username,password:password}).toArray((err,data)=>{
                    if(data.length>0){
                        let content = {username:username};
                        let miyao = "jwt";
                        let token = jwt.sign(content,miyao,{expiresIn:30*1*1})
                        res.json({code:200,msg:"登陆成功",token:token})					
                    }else{
                        res.json({code:404,msg:"用户名或者密码错误"})
                        database.close()
                    }
                })
            })
        }) 
    })
