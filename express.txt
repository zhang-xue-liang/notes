1.服务器
    服务器也称伺服器，是提供计算服务的设备，应具备承担服务和保障服务的能力。
    服务器的构成包括：处理器、硬盘、内存。系统总线等，在处理能力、稳定性、可靠性、安全性、可扩展性、可管理性等方面要求较高。
    根据服务器提供的服务类型不同分为：文件服务器、数据库服务器、应用程序服务器、Web服务器。
2.前后端分离与耦合架构
    核心思想：前端HTML页面通过ajax调用后端restfull API接口，并使用json数据进行交互。
3.express
    基于node平台开发的一个极其轻量的框架，express不对node.js本身的特性进行二次抽象，而是在原来
    的基础上进行扩充。
    express完全由路由和中间件构成的框架，本质上来说，一个express应用就是为了调用各种中间件。
4.中间件
    中间件(middleware)是一个函数，它可以访问request对象，响应对象(res)，以及处于请求--响应流程中的中间件
    ，一般被命名为next的变量。
    功能：.1可以执行任何代码
          .2可以修改请求和响应对象
          .3可以结束请求--响应循环
          .4可以调用堆栈中的下一个中间件
    如果中间件没有执行结束请求--响应流程，它需要通过next(),将控制权传递给下一个中间件
    我们把结束请求--响应流程的方法，称之为句柄函数。
    
5.安装和创建基于express的项目
    .1全局安装环境 ： npm install express -g
    .2测试安装成功与否 express -h
    .3安装 npm install express-generator -g
    .4脚手架创建项目 express -e project_name (项目名字)
    .5安装package.json中的依赖，进入目录cd express 安装npm i
    .5启动npm start 浏览器输入localhost:3000查看
6.脚手架创建项目解读
    package.json: 提供了所有依赖选项的查看和版本信息，以及指令的运行
    app.js :管理所有依赖选项的使用以及路由的挂载配置
    views：视图的展示，存放的是ejs文件
    routes：存放路由级别路由
    public：存放静态文件
    bin/www:服务启动文件
